<?xml version="1.0" encoding="UTF-8"?>
<br.pucrio.inf.les.genarch.models.architecture:Architecture xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:br.pucrio.inf.les.genarch.models.architecture="http:///ArchitectureMetaModel.ecore">
  <containers name="src">
    <components name="lancs" path="src/lancs">
      <subComponents name="mobilemedia" path="src/lancs/mobilemedia">
        <subComponents name="core" path="src/lancs/mobilemedia/core">
          <subComponents name="ui" path="src/lancs/mobilemedia/core/ui">
            <subComponents name="controller" path="src/lancs/mobilemedia/core/ui/controller">
              <classes name="PhotoViewController.java" path="src/lancs/mobilemedia/core/ui/controller/PhotoViewController.java">
                <MethodRef name="PhotoViewController" path="src/lancs/mobilemedia/core/ui/controller/PhotoViewController.java" MethodDeclaration="PhotoViewController( MainUIMidlet midlet AlbumData albumData AlbumListScreen albumListScreen String imageName )"/>
                <MethodRef name="handleCommand" path="src/lancs/mobilemedia/core/ui/controller/PhotoViewController.java" MethodDeclaration="boolean handleCommand( Command c )"/>
                <MethodRef name="getCpVideoScreen" path="src/lancs/mobilemedia/core/ui/controller/PhotoViewController.java" MethodDeclaration="CaptureVideoScreen getCpVideoScreen( )"/>
                <MethodRef name="setCpVideoScreen" path="src/lancs/mobilemedia/core/ui/controller/PhotoViewController.java" MethodDeclaration="void setCpVideoScreen( CaptureVideoScreen cpVideoScreen )"/>
                <AttributeRef name="imageName" path="src/lancs/mobilemedia/core/ui/controller/PhotoViewController.java" AttributDeclaration="String imageName"/>
                <AttributeRef name="cpVideoScreen" path="src/lancs/mobilemedia/core/ui/controller/PhotoViewController.java" AttributDeclaration="CaptureVideoScreen cpVideoScreen"/>
              </classes>
              <classes name="MusicPlayController.java" path="src/lancs/mobilemedia/core/ui/controller/MusicPlayController.java">
                <MethodRef name="MusicPlayController" path="src/lancs/mobilemedia/core/ui/controller/MusicPlayController.java" MethodDeclaration="MusicPlayController( MainUIMidlet midlet AlbumData albumData List albumListScreen PlayMediaScreen pmscreen )"/>
                <MethodRef name="handleCommand" path="src/lancs/mobilemedia/core/ui/controller/MusicPlayController.java" MethodDeclaration="boolean handleCommand( Command command )"/>
                <MethodRef name="getMediaName" path="src/lancs/mobilemedia/core/ui/controller/MusicPlayController.java" MethodDeclaration="String getMediaName( )"/>
                <MethodRef name="setMediaName" path="src/lancs/mobilemedia/core/ui/controller/MusicPlayController.java" MethodDeclaration="void setMediaName( String mediaName )"/>
                <AttributeRef name="mediaName" path="src/lancs/mobilemedia/core/ui/controller/MusicPlayController.java" AttributDeclaration="String mediaName"/>
                <AttributeRef name="pmscreen" path="src/lancs/mobilemedia/core/ui/controller/MusicPlayController.java" AttributDeclaration="PlayMediaScreen pmscreen"/>
              </classes>
              <classes name="MediaListController.java" path="src/lancs/mobilemedia/core/ui/controller/MediaListController.java">
                <MethodRef name="MediaListController" path="src/lancs/mobilemedia/core/ui/controller/MediaListController.java" MethodDeclaration="MediaListController( MainUIMidlet midlet AlbumData albumData AlbumListScreen albumListScreen )"/>
                <MethodRef name="handleCommand" path="src/lancs/mobilemedia/core/ui/controller/MediaListController.java" MethodDeclaration="boolean handleCommand( Command command )"/>
                <MethodRef name="showMediaList" path="src/lancs/mobilemedia/core/ui/controller/MediaListController.java" MethodDeclaration="void showMediaList( String recordName boolean sort boolean favorite )"/>
                <MethodRef name="exchange" path="src/lancs/mobilemedia/core/ui/controller/MediaListController.java" MethodDeclaration="void exchange( MediaData[] medias int pos1 int pos2 )"/>
                <MethodRef name="bubbleSort" path="src/lancs/mobilemedia/core/ui/controller/MediaListController.java" MethodDeclaration="void bubbleSort( MediaData[] medias )"/>
              </classes>
              <classes name="MediaController.java" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java">
                <MethodRef name="MediaController" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="MediaController( MainUIMidlet midlet AlbumData albumData AlbumListScreen albumListScreen )"/>
                <MethodRef name="handleCommand" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="boolean handleCommand( Command command )">
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{3207 , 3752}" Start="3207" End="3752" Code="&#xA;&#x9;&#x9;&#x9;// #ifdef includePhoto&#xA;&#x9;&#x9;&#x9;// [NC] Added in the scenario 07&#xA;&#x9;&#x9;&#x9;else if (label.equals(&quot;View&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;String selectedImageName = getSelectedMediaName();&#xA;&#x9;&#x9;&#x9;&#x9;showImage(selectedImageName);&#xA;&#x9;&#x9;&#x9;&#x9;/** #Feature(name=&quot;Sorting&quot;, parent=&quot;MediaManagement&quot;, type=FeatureType.optional) */&#xA;&#x9;&#x9;&#x9;&#x9;// #ifdef includeSorting&#xA;&#x9;&#x9;&#x9;&#x9;// [EF] Added in the scenario 02&#xA;&#x9;&#x9;&#x9;&#x9;incrementCountViews(selectedImageName);&#xA;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;/** #endFeature */&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;ScreenSingleton.getInstance().setCurrentScreenName(Constants.IMAGE_SCREEN);&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;">
                    <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{3207 , 3752}.{3483 , 3611}" Start="3483" End="3611" Code="&#xA;&#x9;&#x9;&#x9;&#x9;// #ifdef includeSorting&#xA;&#x9;&#x9;&#x9;&#x9;// [EF] Added in the scenario 02&#xA;&#x9;&#x9;&#x9;&#x9;incrementCountViews(selectedImageName);&#xA;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;"/>
                  </CodePieceRef>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{3856 , 4081}" Start="3856" End="4081" Code="&#xA;&#x9;&#x9;&#x9;// #ifdef includeMusic&#xA;&#x9;&#x9;&#x9;// [NC] Added in the scenario 07&#xA;&#x9;&#x9;&#x9;else if (label.equals(&quot;Play&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;String selectedMediaName = getSelectedMediaName();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return playMusicMedia(selectedMediaName);&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;} &#xA;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{4191 , 4421}" Start="4191" End="4421" Code="&#xA;&#x9;&#x9;&#x9;// #ifdef includeVideo&#xA;&#x9;&#x9;&#x9;// [NC] Added in the scenario 08&#xA;&#x9;&#x9;&#x9;else if (label.equals(&quot;Play Video&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;String selectedMediaName = getSelectedMediaName();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return playVideoMedia(selectedMediaName);&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{4527 , 5035}" Start="4527" End="5035" Code="&#xA;&#x9;&#x9;&#x9;// #ifdef captureVideo&#xA;&#x9;&#x9;&#x9;// [NC] Added in the scenario 08&#xA;&#x9;&#x9;&#x9;else if (label.equals(&quot;Capture Video&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;CaptureVideoScreen playscree = new CaptureVideoScreen(midlet, CaptureVideoScreen.CAPTUREVIDEO);&#xA;&#x9;&#x9;&#x9;&#x9;playscree.setVisibleVideo();&#xA;&#x9;&#x9;&#x9;&#x9;VideoCaptureController controller = new VideoCaptureController(midlet, getAlbumData(), (AlbumListScreen) getAlbumListScreen(), playscree);&#xA;&#x9;&#x9;&#x9;&#x9;this.setNextController(controller);&#xA;&#x9;&#x9;&#x9;&#x9;playscree.setCommandListener(this);&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{5139 , 5682}" Start="5139" End="5682" Code="&#xA;&#x9;&#x9;&#x9;// #ifdef capturePhoto&#xA;&#x9;&#x9;&#x9;// [NC] Added in the scenario 08&#xA;&#x9;&#x9;&#x9;else if (label.equals(&quot;Capture Photo&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;CaptureVideoScreen playscree = new CaptureVideoScreen(midlet, CaptureVideoScreen.CAPTUREPHOTO);&#xA;&#x9;&#x9;&#x9;&#x9;playscree.setVisibleVideo();&#xA;&#x9;&#x9;&#x9;&#x9;PhotoViewController controller = new PhotoViewController(midlet, getAlbumData(), (AlbumListScreen) getAlbumListScreen(), &quot;New photo&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;controller.setCpVideoScreen(playscree);&#xA;&#x9;&#x9;&#x9;&#x9;this.setNextController(controller);&#xA;&#x9;&#x9;&#x9;&#x9;playscree.setCommandListener(this);&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{6018 , 6648}" Start="6018" End="6648" Code="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// #ifdef includeMusic&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// [NC] Added in the scenario 07&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (getAlbumData() instanceof MusicAlbumData){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getAlbumData().loadMediaDataFromRMS(getCurrentStoreName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;MediaData mymedia = getAlbumData().getMediaInfo(((AddMediaToAlbum) getCurrentScreen()).getItemName());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;mymedia.setTypeMedia( ((AddMediaToAlbum) getCurrentScreen()).getItemType() );&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;getAlbumData().updateMediaInfo(mymedia, mymedia);&#xA;&#x9;//&#x9;&#x9;&#x9;&#x9;&#x9;MultiMediaData mmedi = new MultiMediaData(mymedia, ((AddMediaToAlbum) getCurrentScreen()).getItemType());&#xA;&#x9;//&#x9;&#x9;&#x9;&#x9;&#x9;getAlbumData().updateMediaInfo(mymedia, mmedi);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{7629 , 7984}" Start="7629" End="7984" Code="&#xA;&#x9;&#x9;&#x9;&#x9;// #ifdef includeMusic&#xA;&#x9;&#x9;&#x9;&#x9;// [NC] Added in the scenario 07&#xA;&#x9;&#x9;&#x9;&#x9;catch (ImageNotFoundException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Alert alert = new Alert(&quot;Error&quot;, &quot;The selected item was not found in the mobile device&quot;, null, AlertType.ERROR);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Display.getDisplay(midlet).setCurrent(alert, Display.getDisplay(midlet).getCurrent());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{9941 , 10281}" Start="9941" End="10281" Code="&#xA;&#x9;&#x9;&#x9;// #ifdef includeSorting&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Case: Sort photos by number of views &#xA;&#x9;&#x9;&#x9; * [EF] Added in the scenario 02 */&#xA;&#x9;&#x9;&#x9;} else if (label.equals(&quot;Sort by Views&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;showMediaList(getCurrentStoreName(), true, false);&#xA;&#x9;&#x9;&#x9;&#x9;ScreenSingleton.getInstance().setCurrentScreenName(Constants.IMAGELIST_SCREEN);&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;// #endif&#xA;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{10392 , 12288}" Start="10392" End="12288" Code="&#xA;&#x9;&#x9;&#x9;// #ifdef includeFavourites&#xA;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9; * Case: Set photo as favorite&#xA;&#x9;&#x9;&#x9; * [EF] Added in the scenario 03 */&#xA;&#x9;&#x9;&#x9;} else if (label.equals(&quot;Set Favorite&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;String selectedMediaName = getSelectedMediaName();&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;MediaData media = getAlbumData().getMediaInfo(selectedMediaName);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;media.toggleFavorite();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;updateMedia(media);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;System.out.println(&quot;&lt;* BaseController.handleCommand() *> Image = &quot;+ selectedMediaName + &quot;; Favorite = &quot; + media.isFavorite());&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ImageNotFoundException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Alert alert = new Alert(&quot;Error&quot;, &quot;The selected item was not found in the mobile device&quot;, null, AlertType.ERROR);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Display.getDisplay(midlet).setCurrent(alert, Display.getDisplay(midlet).getCurrent());&#xA;&#x9;&#x9;&#x9;&#x9;} catch (InvalidImageDataException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Alert alert = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (e instanceof ImagePathNotValidException)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;alert = new Alert(&quot;Error&quot;, &quot;The path is not valid&quot;, null, AlertType.ERROR);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;alert = new Alert(&quot;Error&quot;, &quot;The image file format is not valid&quot;, null, AlertType.ERROR);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Display.getDisplay(midlet).setCurrent(alert, Display.getDisplay(midlet).getCurrent());&#xA;&#x9;&#x9;&#x9;&#x9;} catch (PersistenceMechanismException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Alert alert = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (e.getCause() instanceof  RecordStoreFullException)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;alert = new Alert( &quot;Error&quot;, &quot;The mobile database is full&quot;, null, AlertType.ERROR);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;alert = new Alert( &quot;Error&quot;, &quot;The mobile database can not update new informations&quot;, null, AlertType.ERROR);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Display.getDisplay(midlet).setCurrent(alert, Display.getDisplay(midlet).getCurrent());&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;/**&#xA;&#x9;&#x9;&#x9;&#x9; * Case: View favorite photos &#xA;&#x9;&#x9;&#x9;&#x9; * [EF] Added in the scenario 03 */&#xA;&#x9;&#x9;&#x9;} else if (label.equals(&quot;View Favorites&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;showMediaList(getCurrentStoreName(), false, true);&#xA;&#x9;&#x9;&#x9;&#x9;ScreenSingleton.getInstance().setCurrentScreenName(Constants.IMAGELIST_SCREEN);&#xA;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;// #endif&#xA;&#x9;&#x9;&#x9;"/>
                </MethodRef>
                <MethodRef name="playMusicMedia" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="boolean playMusicMedia( String selectedMediaName )">
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{14023 , 14151}" Start="14023" End="14151" Code="&#xA;&#x9;&#x9;&#x9;&#x9;// #ifdef includeSorting&#xA;&#x9;&#x9;&#x9;&#x9;// [EF] Added in the scenario 02&#xA;&#x9;&#x9;&#x9;&#x9;incrementCountViews(selectedMediaName);&#xA;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{14727 , 14868}" Start="14727" End="14868" Code="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// #ifdef includeCopyMedia&#xA;&#x9;&#x9;&#x9;&#x9;  &#x9;// [NC] Added in the scenario 07&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;controller.setMediaName(selectedMediaName);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
                </MethodRef>
                <MethodRef name="playVideoMedia" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="boolean playVideoMedia( String selectedMediaName )">
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{15926 , 16054}" Start="15926" End="16054" Code="&#xA;&#x9;&#x9;&#x9;&#x9;// #ifdef includeSorting&#xA;&#x9;&#x9;&#x9;&#x9;// [EF] Added in the scenario 02&#xA;&#x9;&#x9;&#x9;&#x9;incrementCountViews(selectedMediaName);&#xA;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{16664 , 16805}" Start="16664" End="16805" Code="&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// #ifdef includeCopyMedia&#xA;&#x9;&#x9;&#x9;&#x9;  &#x9;// [NC] Added in the scenario 07&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;controller.setMediaName(selectedMediaName);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;"/>
                </MethodRef>
                <MethodRef name="incrementCountViews" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="void incrementCountViews( String selectedImageName )"/>
                <MethodRef name="updateMedia" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="void updateMedia( MediaData media )"/>
                <MethodRef name="getSelectedMediaName" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="String getSelectedMediaName( )"/>
                <MethodRef name="showImage" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="void showImage( String name )">
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{20668 , 21088}" Start="20668" End="21088" Code="&#xA;&#x9;&#x9;&#x9;// #if includeCopyMedia || includeSmsFeature&#xA;&#x9;&#x9;&#x9;// [NC] Changed in the scenario 07: just the first line below to support generic AbstractController&#xA;&#x9;&#x9;&#x9;PhotoViewController controller = new PhotoViewController(midlet, getAlbumData(), (AlbumListScreen) getAlbumListScreen(), name);&#xA;&#x9;&#x9;&#x9;controller.setNextController(nextcontroller);&#xA;&#x9;&#x9;&#x9;canv.setCommandListener(controller);&#xA;&#x9;&#x9;&#x9;nextcontroller = controller;&#xA;&#x9;&#x9;&#x9;// #endif&#xA;&#x9;&#x9;&#x9;"/>
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java.{21191 , 21683}" Start="21191" End="21683" Code="&#xA;&#x9;&#x9;&#x9;//#ifdef includeSmsFeature&#xA;&#x9;&#x9;&#x9;/* [NC] Added in scenario 06 */&#xA;&#x9;&#x9;&#x9;// [NC] Changed in the scenario 07: just the first line below to support generic AbstractController&#xA;&#x9;&#x9;&#x9;SmsSenderController smscontroller = new SmsSenderController(midlet, getAlbumData(), (AlbumListScreen) getAlbumListScreen(), name);&#xA;&#x9;&#x9;&#x9;//this.setNextController(smscontroller);&#xA;&#x9;&#x9;&#x9;smscontroller.setNextController(nextcontroller);&#xA;&#x9;&#x9;&#x9;canv.setCommandListener(smscontroller);&#xA;&#x9;&#x9;&#x9;nextcontroller = smscontroller;&#xA;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;"/>
                </MethodRef>
                <MethodRef name="goToPreviousScreen" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="boolean goToPreviousScreen( )"/>
                <MethodRef name="setMedia" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="void setMedia( MediaData media )"/>
                <MethodRef name="getMedia" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="MediaData getMedia( )"/>
                <MethodRef name="setScreen" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="void setScreen( NewLabelScreen screen )"/>
                <MethodRef name="getScreen" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" MethodDeclaration="NewLabelScreen getScreen( )"/>
                <AttributeRef name="media" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" AttributDeclaration="MediaData media"/>
                <AttributeRef name="screen" path="src/lancs/mobilemedia/core/ui/controller/MediaController.java" AttributDeclaration="NewLabelScreen screen"/>
              </classes>
              <classes name="ControllerInterface.java" path="src/lancs/mobilemedia/core/ui/controller/ControllerInterface.java">
                <MethodRef name="postCommand" path="src/lancs/mobilemedia/core/ui/controller/ControllerInterface.java" MethodDeclaration="void postCommand( Command command )"/>
                <MethodRef name="handleCommand" path="src/lancs/mobilemedia/core/ui/controller/ControllerInterface.java" MethodDeclaration="boolean handleCommand( Command command )"/>
              </classes>
              <classes name="BaseController.java" path="src/lancs/mobilemedia/core/ui/controller/BaseController.java">
                <MethodRef name="BaseController" path="src/lancs/mobilemedia/core/ui/controller/BaseController.java" MethodDeclaration="BaseController( MainUIMidlet midlet AlbumData model AlbumListScreen albumListScreen )"/>
                <MethodRef name="init" path="src/lancs/mobilemedia/core/ui/controller/BaseController.java" MethodDeclaration="void init( AlbumData model )"/>
                <MethodRef name="handleCommand" path="src/lancs/mobilemedia/core/ui/controller/BaseController.java" MethodDeclaration="boolean handleCommand( Command command )"/>
                <MethodRef name="goToPreviousScreen" path="src/lancs/mobilemedia/core/ui/controller/BaseController.java" MethodDeclaration="boolean goToPreviousScreen( )">
                  <CodePieceRef name="" path="src/lancs/mobilemedia/core/ui/controller/BaseController.java.{4041 , 4323}" Start="4041" End="4323" Code="&#xA;&#x9;&#x9;&#x9;// #if includeMusic &amp;&amp; includePhoto&#xA;&#x9;&#x9;&#x9;// [NC] Added in the scenario 07&#xA;&#x9;&#x9;&#x9;if ((currentScreenName == null) || (currentScreenName.equals(Constants.ALBUMLIST_SCREEN))) &#xA;&#x9;&#x9;&#x9;{&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;setCurrentScreen( ScreenSingleton.getInstance().getMainMenu());&#xA;&#x9;&#x9;&#x9;&#x9;return true;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;//#endif&#xA;&#x9;&#x9;&#x9;"/>
                </MethodRef>
              </classes>
            </subComponents>
          </subComponents>
          <subComponents name="threads" path="src/lancs/mobilemedia/core/threads"/>
          <subComponents name="comms" path="src/lancs/mobilemedia/core/comms">
            <classes name="BaseMessaging.java" path="src/lancs/mobilemedia/core/comms/BaseMessaging.java">
              <MethodRef name="sendImage" path="src/lancs/mobilemedia/core/comms/BaseMessaging.java" MethodDeclaration="boolean sendImage( byte[] imageData )"/>
              <MethodRef name="receiveImage" path="src/lancs/mobilemedia/core/comms/BaseMessaging.java" MethodDeclaration="byte[] receiveImage( )"/>
              <MethodRef name="cleanUpConnections" path="src/lancs/mobilemedia/core/comms/BaseMessaging.java" MethodDeclaration="void cleanUpConnections( MessageConnection conn )"/>
            </classes>
          </subComponents>
        </subComponents>
      </subComponents>
    </components>
  </containers>
</br.pucrio.inf.les.genarch.models.architecture:Architecture>
