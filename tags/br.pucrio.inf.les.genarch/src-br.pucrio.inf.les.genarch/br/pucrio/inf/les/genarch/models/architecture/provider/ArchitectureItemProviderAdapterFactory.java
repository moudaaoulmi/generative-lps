/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package br.pucrio.inf.les.genarch.models.architecture.provider;

import br.pucrio.inf.les.genarch.models.architecture.util.ArchitectureAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ArchitectureItemProviderAdapterFactory extends ArchitectureAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection supportedTypes = new ArrayList();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ArchitectureItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.Architecture} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureItemProvider architectureItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.Architecture}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureAdapter() {
		if (architectureItemProvider == null) {
			architectureItemProvider = new ArchitectureItemProvider(this);
		}

		return architectureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureContainerItemProvider architectureContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureContainerAdapter() {
		if (architectureContainerItemProvider == null) {
			architectureContainerItemProvider = new ArchitectureContainerItemProvider(this);
		}

		return architectureContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureResourcesContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureResourcesContainerItemProvider architectureResourcesContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureResourcesContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureResourcesContainerAdapter() {
		if (architectureResourcesContainerItemProvider == null) {
			architectureResourcesContainerItemProvider = new ArchitectureResourcesContainerItemProvider(this);
		}

		return architectureResourcesContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFragmentContainer} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureFragmentContainerItemProvider architectureFragmentContainerItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFragmentContainer}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureFragmentContainerAdapter() {
		if (architectureFragmentContainerItemProvider == null) {
			architectureFragmentContainerItemProvider = new ArchitectureFragmentContainerItemProvider(this);
		}

		return architectureFragmentContainerItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureEntityItemProvider architectureEntityItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureEntityAdapter() {
		if (architectureEntityItemProvider == null) {
			architectureEntityItemProvider = new ArchitectureEntityItemProvider(this);
		}

		return architectureEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureComponentItemProvider architectureComponentItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureComponentAdapter() {
		if (architectureComponentItemProvider == null) {
			architectureComponentItemProvider = new ArchitectureComponentItemProvider(this);
		}

		return architectureComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureClass} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureClassItemProvider architectureClassItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureClass}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureClassAdapter() {
		if (architectureClassItemProvider == null) {
			architectureClassItemProvider = new ArchitectureClassItemProvider(this);
		}

		return architectureClassItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureAspect} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureAspectItemProvider architectureAspectItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureAspect}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureAspectAdapter() {
		if (architectureAspectItemProvider == null) {
			architectureAspectItemProvider = new ArchitectureAspectItemProvider(this);
		}

		return architectureAspectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFile} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureFileItemProvider architectureFileItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFile}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureFileAdapter() {
		if (architectureFileItemProvider == null) {
			architectureFileItemProvider = new ArchitectureFileItemProvider(this);
		}

		return architectureFileItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureTemplate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureTemplateItemProvider architectureTemplateItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureTemplate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureTemplateAdapter() {
		if (architectureTemplateItemProvider == null) {
			architectureTemplateItemProvider = new ArchitectureTemplateItemProvider(this);
		}

		return architectureTemplateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFolder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureFolderItemProvider architectureFolderItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFolder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureFolderAdapter() {
		if (architectureFolderItemProvider == null) {
			architectureFolderItemProvider = new ArchitectureFolderItemProvider(this);
		}

		return architectureFolderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFragment} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArchitectureFragmentItemProvider architectureFragmentItemProvider;

	/**
	 * This creates an adapter for a {@link br.pucrio.inf.les.genarch.models.architecture.ArchitectureFragment}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter createArchitectureFragmentAdapter() {
		if (architectureFragmentItemProvider == null) {
			architectureFragmentItemProvider = new ArchitectureFragmentItemProvider(this);
		}

		return architectureFragmentItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class) || (((Class)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (architectureItemProvider != null) architectureItemProvider.dispose();
		if (architectureContainerItemProvider != null) architectureContainerItemProvider.dispose();
		if (architectureResourcesContainerItemProvider != null) architectureResourcesContainerItemProvider.dispose();
		if (architectureFragmentContainerItemProvider != null) architectureFragmentContainerItemProvider.dispose();
		if (architectureEntityItemProvider != null) architectureEntityItemProvider.dispose();
		if (architectureComponentItemProvider != null) architectureComponentItemProvider.dispose();
		if (architectureClassItemProvider != null) architectureClassItemProvider.dispose();
		if (architectureAspectItemProvider != null) architectureAspectItemProvider.dispose();
		if (architectureFileItemProvider != null) architectureFileItemProvider.dispose();
		if (architectureTemplateItemProvider != null) architectureTemplateItemProvider.dispose();
		if (architectureFolderItemProvider != null) architectureFolderItemProvider.dispose();
		if (architectureFragmentItemProvider != null) architectureFragmentItemProvider.dispose();
	}

}
